{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport setAuthToken from '../utils/setAuthToken';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_PROFILE } from './types';\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth/user');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\nexport const register = _ref => {\n  let {\n    name,\n    email,\n    password,\n    password_confirmation\n  } = _ref;\n  return async dispatch => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      name,\n      email,\n      password,\n      password_confirmation\n    });\n\n    try {\n      const res = await axios.post('/api/auth/register', body, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      dispatch(loadUser());\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        // errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        // console.log(prop, errors[prop][0]);\n        for (const prop in errors) {\n          dispatch(setAlert(errors[prop][0], 'danger'));\n        } // errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n\n      }\n\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }\n  };\n};\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/auth/login', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      // errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n      for (const prop in errors) {\n        dispatch(setAlert(errors[prop][0], 'danger'));\n      }\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["/home/dev/Documents/labs/js/reactjs/react-redux-auth/src/actions/auth.js"],"names":["axios","setAlert","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_PROFILE","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err","register","name","email","password","password_confirmation","config","headers","body","JSON","stringify","post","errors","response","prop","login","logout"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport setAuthToken from '../utils/setAuthToken';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE,\n} from './types';\n\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth/user');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\nexport const register = ({ name, email, password, password_confirmation }) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ name, email, password, password_confirmation });\n\n  try {\n    const res = await axios.post('/api/auth/register', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      // errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n      // console.log(prop, errors[prop][0]);\n      for (const prop in errors) {\n        dispatch(setAlert(errors[prop][0], 'danger'));\n      }\n      // errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n\nexport const login = (email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post('/api/auth/login', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      // errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n      for (const prop in errors) {\n        dispatch(setAlert(errors[prop][0], 'danger'));\n      }\n    }\n\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  dispatch({\n    type: CLEAR_PROFILE,\n  });\n  dispatch({\n    type: LOGOUT,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}