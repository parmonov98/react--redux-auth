{"ast":null,"code":"var _jsxFileName = \"/home/dev/Documents/labs/js/reactjs/react-redux-auth/src/components/posts/PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostItem = _ref => {\n  let {\n    addLike,\n    removeLike,\n    deletePost,\n    auth,\n    post: {\n      _id,\n      text,\n      name,\n      avatar,\n      user,\n      likes,\n      comments,\n      date\n    },\n    showActions\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post bg-white p-1 my-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/profile/${user}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"round-img\",\n            src: avatar,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"my-1\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-date\",\n          children: [\"Posted on \", /*#__PURE__*/_jsxDEV(Moment, {\n            format: \"YYYY/MM/DD\",\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), showActions && /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => addLike(_id),\n            type: \"button\",\n            className: \"btn btn-light\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-thumbs-up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), ' ', likes.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: likes.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => removeLike(_id),\n            type: \"button\",\n            className: \"btn btn-light\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-thumbs-down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/posts/${_id}`,\n            className: \"btn btn-primary\",\n            children: [\"Discussion\", ' ', comments.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"comment-count\",\n              children: comments.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), !auth.loading && user === auth.user._id && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => deletePost(_id),\n            type: \"button\",\n            className: \"btn btn-danger\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PostItem;\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["/home/dev/Documents/labs/js/reactjs/react-redux-auth/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","showActions","e","length","loading","defaultProps","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  showActions,\n}) => {\n  return (\n    <Fragment>\n      <div className=\"post bg-white p-1 my-1\">\n        <div>\n          <Link to={`/profile/${user}`}>\n            <img className=\"round-img\" src={avatar} alt=\"\" />\n            <h4>{name}</h4>\n          </Link>\n        </div>\n        <div>\n          <p className=\"my-1\">{text}</p>\n          <p className=\"post-date\">\n            Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n          </p>\n          {showActions && (\n            <Fragment>\n              <button\n                onClick={(e) => addLike(_id)}\n                type=\"button\"\n                className=\"btn btn-light\"\n              >\n                <i className=\"fas fa-thumbs-up\" />{' '}\n                {likes.length > 0 && <span>{likes.length}</span>}\n              </button>\n              <button\n                onClick={(e) => removeLike(_id)}\n                type=\"button\"\n                className=\"btn btn-light\"\n              >\n                <i className=\"fas fa-thumbs-down\"></i>\n              </button>\n              <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\n                Discussion{' '}\n                {comments.length > 0 && (\n                  <span className=\"comment-count\">{comments.length}</span>\n                )}\n              </Link>\n              {!auth.loading && user === auth.user._id && (\n                <button\n                  onClick={(e) => deletePost(_id)}\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                >\n                  <i className=\"fas fa-times\" />\n                </button>\n              )}\n            </Fragment>\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nPostItem.defaultProps = {\n  showActions: true,\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n  PostItem\n);\n"]},"metadata":{},"sourceType":"module"}