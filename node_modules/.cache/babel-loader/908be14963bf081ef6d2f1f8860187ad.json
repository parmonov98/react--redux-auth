{"ast":null,"code":"var _jsxFileName = \"/home/dev/Documents/labs/js/reactjs/react-redux-auth/src/components/dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport Education from './Education';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\nimport { showSideBar } from '../../actions/sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = _ref => {\n  _s();\n\n  let {\n    getCurrentProfile,\n    deleteAccount,\n    auth: {\n      user\n    },\n    profile: {\n      profile,\n      loading\n    },\n    showSideBar\n  } = _ref;\n  useEffect(() => {\n    getCurrentProfile();\n    showSideBar();\n  }, [getCurrentProfile]);\n  return loading && profile === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Dashboard;\nDashboard.propTypes = {\n  showSideBar: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile,\n  deleteAccount,\n  showSideBar\n})(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/dev/Documents/labs/js/reactjs/react-redux-auth/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","Link","PropTypes","connect","Spinner","DashboardActions","Experience","Education","getCurrentProfile","deleteAccount","showSideBar","Dashboard","auth","user","profile","loading","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,iBAAT,EAA4BC,aAA5B,QAAiD,uBAAjD;AACA,SAASC,WAAT,QAA4B,uBAA5B;;;AAEA,MAAMC,SAAS,GAAG,QAMZ;AAAA;;AAAA,MANa;AACjBH,IAAAA,iBADiB;AAEjBC,IAAAA,aAFiB;AAGjBG,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF,KAHW;AAIjBC,IAAAA,OAAO,EAAE;AAAEA,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAJQ;AAKjBL,IAAAA;AALiB,GAMb;AACJV,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,iBAAiB;AACjBE,IAAAA,WAAW;AACZ,GAHQ,EAGN,CAACF,iBAAD,CAHM,CAAT;AAKA,SAAOO,OAAO,IAAID,OAAO,KAAK,IAAvB,gBACL,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UAHF;AAOD,CAnBD;;GAAMH,S;;KAAAA,S;AAqBNA,SAAS,CAACK,SAAV,GAAsB;AACpBN,EAAAA,WAAW,EAAER,SAAS,CAACe,IAAV,CAAeC,UADR;AAEpBV,EAAAA,iBAAiB,EAAEN,SAAS,CAACe,IAAV,CAAeC,UAFd;AAGpBT,EAAAA,aAAa,EAAEP,SAAS,CAACe,IAAV,CAAeC,UAHV;AAIpBN,EAAAA,IAAI,EAAEV,SAAS,CAACiB,MAAV,CAAiBD,UAJH;AAKpBJ,EAAAA,OAAO,EAAEZ,SAAS,CAACiB,MAAV,CAAiBD;AALN,CAAtB;;AAQA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,IAAI,EAAES,KAAK,CAACT,IADsB;AAElCE,EAAAA,OAAO,EAAEO,KAAK,CAACP;AAFmB,CAAZ,CAAxB;;AAKA,eAAeX,OAAO,CAACiB,eAAD,EAAkB;AAAEZ,EAAAA,iBAAF;AAAqBC,EAAAA,aAArB;AAAoCC,EAAAA;AAApC,CAAlB,CAAP,CACbC,SADa,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport Education from './Education';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\nimport { showSideBar } from '../../actions/sidebar';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: { user },\n  profile: { profile, loading },\n  showSideBar\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n    showSideBar()\n  }, [getCurrentProfile]);\n\n  return loading && profile === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      \n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  showSideBar: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount, showSideBar })(\n  Dashboard\n);\n"]},"metadata":{},"sourceType":"module"}